 
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif


// 'TheOffice', 128x64px
static const unsigned char myBitmap [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
   0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xb5, 0xfd, 0x5f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x40, 0xfd, 0xee, 0xb7, 0x3b, 0xfe, 0xfd, 0x01, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0xf7, 0xbb, 0xff, 0x3f, 0xff,
   0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xb9, 0xd8,
   0xe2, 0xff, 0x9f, 0xc1, 0xcb, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x40, 0x14, 0xb8, 0x9b, 0x7f, 0x90, 0x81, 0x0f, 0x3f, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x03, 0x74, 0xc7, 0x7f, 0x90, 0x0f,
   0x0f, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x76,
   0x7c, 0xff, 0xc9, 0x1f, 0x7e, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x6e, 0x00, 0x3b, 0xfe, 0xfd, 0xcf, 0xbf, 0xfb, 0xfd, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x00, 0x3b, 0xff, 0xf9, 0xe7, 0xef,
   0xfe, 0x79, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x15, 0x84, 0x1d,
   0xff, 0xf9, 0xe7, 0x01, 0xfe, 0xfb, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xc0, 0x0a, 0x80, 0x1f, 0xff, 0xf9, 0xe3, 0x00, 0xf8, 0xff, 0x0f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x60, 0x02, 0xc0, 0x1e, 0xff, 0xff, 0x33, 0x00,
   0xf8, 0xff, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x53, 0xdb, 0x5f,
   0xff, 0xff, 0x73, 0xea, 0xff, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x5c, 0x94, 0x04, 0xa8, 0xf4, 0xff, 0xf3, 0xff, 0x01, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x50, 0x00, 0x00, 0x00, 0xf0, 0x01,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x01, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x20, 0x02,
   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xa8, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x20, 0x00, 0x00, 0x04, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x40,
   0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x02, 0x00, 0x00, 0x00, 0x21, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x80, 0x84, 0x07,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x20,
   0x22, 0x02, 0xc0, 0x07, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xfe,
   0x00, 0x00, 0x00, 0x42, 0x44, 0x28, 0xc1, 0x0f, 0xe0, 0x00, 0x00, 0x00,
   0x00, 0x40, 0x57, 0xd3, 0x01, 0x3c, 0x88, 0x00, 0x00, 0x02, 0x64, 0x0f,
   0xa0, 0xfd, 0xff, 0x7f, 0x81, 0x14, 0xf8, 0xe7, 0x00, 0xfe, 0x10, 0x4a,
   0x49, 0x40, 0xe0, 0x0f, 0xb0, 0xfc, 0xab, 0xfe, 0x07, 0xd0, 0x7f, 0x77,
   0x00, 0xff, 0x01, 0x00, 0x00, 0x09, 0xe1, 0x0e, 0x50, 0xfe, 0xff, 0xfd,
   0x0f, 0x51, 0xff, 0x7b, 0x80, 0xff, 0x81, 0x48, 0x12, 0x21, 0xf0, 0x0d,
   0x00, 0xff, 0xab, 0xff, 0x0f, 0xff, 0xab, 0x3c, 0xc0, 0xfd, 0x13, 0x02,
   0x08, 0x84, 0x70, 0x1f, 0x00, 0xff, 0xab, 0x6f, 0x0b, 0x00, 0xf0, 0x17,
   0xc0, 0xef, 0x23, 0x48, 0xa1, 0x10, 0xd1, 0x0d, 0x00, 0xff, 0xff, 0xff,
   0x0f, 0x00, 0x00, 0x00, 0xe0, 0xef, 0x83, 0x00, 0x04, 0x02, 0xf8, 0x0e,
   0x00, 0xff, 0xbf, 0xff, 0x0f, 0x00, 0x00, 0x20, 0xe0, 0x6f, 0x07, 0xaa,
   0x48, 0x00, 0xd8, 0x1d, 0x80, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00,
   0xf0, 0xbf, 0x47, 0x00, 0x02, 0x80, 0x78, 0x0f, 0x00, 0xff, 0xff, 0xff,
   0x0f, 0x80, 0x94, 0x04, 0xd0, 0xfb, 0x0e, 0x12, 0x00, 0x10, 0x78, 0x0d,
   0x00, 0xff, 0xff, 0xff, 0x4f, 0x12, 0x00, 0x10, 0x70, 0xff, 0x4f, 0x00,
   0x00, 0x45, 0x79, 0x0f, 0x00, 0xfd, 0x6f, 0xff, 0x0f, 0x40, 0x4a, 0x02,
   0xf8, 0xeb, 0x0f, 0x00, 0x20, 0x28, 0x7c, 0x0d, 0x04, 0xff, 0xff, 0xff,
   0x45, 0x0a, 0x00, 0x00, 0x78, 0xdf, 0x0f, 0x00, 0x4a, 0x45, 0x7c, 0x03,
   0x3c, 0x77, 0xfb, 0xff, 0x07, 0x00, 0x00, 0x00, 0x4c, 0xcb, 0x1f, 0x40,
   0x88, 0x04, 0xbc, 0x07, 0x78, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x10,
   0x7c, 0x79, 0x1d, 0x8a, 0x52, 0x00, 0xbd, 0x07, 0x78, 0xfe, 0xdf, 0xff,
   0x87, 0xfa, 0xff, 0x27, 0xfc, 0xdd, 0x5f, 0x28, 0x02, 0xd0, 0x7f, 0x06,
   0xf8, 0xfe, 0xff, 0x7f, 0x73, 0xff, 0xff, 0x07, 0xac, 0xe2, 0x1b, 0x91,
   0x00, 0xc0, 0xbf, 0x05, 0x70, 0xfe, 0xff, 0xff, 0x43, 0xff, 0xff, 0x2f,
   0x7c, 0xf5, 0x9b, 0x02, 0x40, 0x80, 0xff, 0x02, 0xf8, 0xfe, 0xff, 0xff,
   0x81, 0xff, 0xab, 0x05, 0x9c, 0xad, 0x1f, 0x00, 0xfe, 0xff, 0xff, 0x03,
   0x70, 0xa8, 0xff, 0xff, 0x55, 0x55, 0xff, 0x5f, 0xbc, 0xfc, 0x1c, 0xc0,
   0xff, 0xff, 0xff, 0x07, 0x00, 0x7e, 0x11, 0xa4, 0xc8, 0xff, 0xff, 0x1f,
   0xfe, 0xda, 0x0d, 0xfe, 0xff, 0xff, 0xff, 0x00, 0x40, 0xfb, 0xff, 0xbf,
   0x81, 0xff, 0xff, 0x5f, 0xf8, 0xbf, 0xef, 0xff, 0xff, 0xff, 0x07, 0x00,
   0x00, 0x04, 0xa0, 0xff, 0x03, 0x90, 0x08, 0x00, 0x6e, 0xff, 0xfe, 0xff,
   0xff, 0x5f, 0x00, 0x00, 0x00, 0xfc, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x7c, 0xff, 0xfe, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff,
   0xaf, 0x00, 0xa8, 0x42, 0xfa, 0x5b, 0xff, 0xff, 0x5f, 0x00, 0x00, 0x00,
   0x00, 0xe0, 0xff, 0xd7, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xbf, 0xff, 0xff,
   0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xef, 0xd6, 0xff, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xbf, 0xf6, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xa0, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x17, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xed, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };





U8G2_ST7920_128X64_F_SW_SPI u8g2(U8G2_R0, /* clock=*/ 13, /* data=*/ 11, /* CS=*/ 10, /* reset=*/ 8);


void draw(void)
{
  u8g2.drawXBMP( 0, 0, 128, 64, myBitmap);

}


void setup() 
{
  // put your setup code here, to run once:
  u8g2.begin();
  u8g2.clearBuffer();
}

void loop()
{
  // put your main code here, to run repeatedly:
  u8g2.firstPage();
  do
  {
    draw();
  }while(u8g2.nextPage());

  delay(1000);

}
